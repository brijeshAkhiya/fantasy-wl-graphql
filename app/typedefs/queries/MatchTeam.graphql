type aPlayers {
    iMatchPlayerId: ID!
    iTeamId: ID!
    nScoredPoints: Int
}

type matchTeam {
    _id: ID!
    iMatchId: ID!
    aPlayers: [aPlayers]
    nTotalPoint: Int
    nTotalCredit: Int
    sHash: String
    eCategory: String
}

input getMatchTeams {
    nOffset: Int
    nLimit: Int
}

input getMatchTeamByFieldName {
    value: String
    nOffset: Int
    nLimit: Int
}

input getMatchTeam {
    iMatchId: String!
    nOffset: Int!
    nLimit: Int!
}

extend type Query {
    getMatchTeams(input: getMatchTeams): [matchTeam]
    getMatchTeam(input: getMatchTeam): [matchTeam]
    getMatchTeamByIds(id: [ID!]): [matchTeam]
    getMatchTeamByFieldName(input: getMatchTeamByFieldName): [matchTeam]
}

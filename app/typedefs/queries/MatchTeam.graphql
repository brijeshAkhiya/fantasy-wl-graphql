type aPlayers {
    iMatchPlayerId: ID!
    iTeamId: ID!
    nScoredPoFloats: Float
}

type matchTeam {
    _id: ID!
    iMatchId: ID!
    aPlayers: [aPlayers]
    nTotalPoFloat: Float
    nTotalCredit: Float
    sHash: String
    eCategory: String
}

input getMatchTeams {
    iMatchId: ID!
    nOffset: Float!
    nLimit: Float!
}

input getMatchTeamByFieldName {
    value: String
    nOffset: Float
    nLimit: Float
}

input getMatchTeam {
    iMatchId: String!
    nOffset: Float!
    nLimit: Float!
}

extend type Query {
    getMatchTeams(input: getMatchTeams): [matchTeam]
    getMatchTeam(input: getMatchTeam): matchTeam
    # getMatchTeamByIds(id: [ID!]): [matchTeam]
    # getMatchTeamByFieldName(input: getMatchTeamByFieldName): [matchTeam]
}
